/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Account from '../model/Account';
import ListAccounts200Response from '../model/ListAccounts200Response';

/**
* Accounts service.
* @module PostPuma/PostPuma/AccountsApi
* @version 1.0.0
*/
export default class AccountsApi {

    /**
    * Constructs a new AccountsApi. 
    * @alias module:PostPuma/PostPuma/AccountsApi
    * @class
    * @param {module:PostPuma/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:PostPuma/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAccount operation.
     * @callback module:PostPuma/PostPuma/AccountsApi~getAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:PostPuma/model/Account} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get account
     * Get account
     * @param {String} accountUuid Account UUID
     * @param {module:PostPuma/PostPuma/AccountsApi~getAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PostPuma/model/Account}
     */
    getAccount(accountUuid, callback) {
      let postBody = null;
      // verify the required parameter 'accountUuid' is set
      if (accountUuid === undefined || accountUuid === null) {
        throw new Error("Missing the required parameter 'accountUuid' when calling getAccount");
      }

      let pathParams = {
        'accountUuid': accountUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Account;
      return this.apiClient.callApi(
        '/accounts/{accountUuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccounts operation.
     * @callback module:PostPuma/PostPuma/AccountsApi~listAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:PostPuma/model/ListAccounts200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List accounts
     * List accounts
     * @param {module:PostPuma/PostPuma/AccountsApi~listAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:PostPuma/model/ListAccounts200Response}
     */
    listAccounts(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAccounts200Response;
      return this.apiClient.callApi(
        '/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
