/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MediaFile model module.
 * @module PostPuma/model/MediaFile
 * @version 1.0.0
 */
class MediaFile {
    /**
     * Constructs a new <code>MediaFile</code>.
     * @alias module:PostPuma/model/MediaFile
     */
    constructor() { 
        
        MediaFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MediaFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:PostPuma/model/MediaFile} obj Optional instance to populate.
     * @return {module:PostPuma/model/MediaFile} The populated <code>MediaFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MediaFile();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('mime_type')) {
                obj['mime_type'] = ApiClient.convertToType(data['mime_type'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('thumb_url')) {
                obj['thumb_url'] = ApiClient.convertToType(data['thumb_url'], 'String');
            }
            if (data.hasOwnProperty('is_video')) {
                obj['is_video'] = ApiClient.convertToType(data['is_video'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MediaFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MediaFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['mime_type'] && !(typeof data['mime_type'] === 'string' || data['mime_type'] instanceof String)) {
            throw new Error("Expected the field `mime_type` to be a primitive type in the JSON string but got " + data['mime_type']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['thumb_url'] && !(typeof data['thumb_url'] === 'string' || data['thumb_url'] instanceof String)) {
            throw new Error("Expected the field `thumb_url` to be a primitive type in the JSON string but got " + data['thumb_url']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
MediaFile.prototype['id'] = undefined;

/**
 * @member {String} uuid
 */
MediaFile.prototype['uuid'] = undefined;

/**
 * @member {String} name
 */
MediaFile.prototype['name'] = undefined;

/**
 * @member {String} mime_type
 */
MediaFile.prototype['mime_type'] = undefined;

/**
 * @member {String} type
 */
MediaFile.prototype['type'] = undefined;

/**
 * @member {String} url
 */
MediaFile.prototype['url'] = undefined;

/**
 * @member {String} thumb_url
 */
MediaFile.prototype['thumb_url'] = undefined;

/**
 * @member {Boolean} is_video
 */
MediaFile.prototype['is_video'] = undefined;

/**
 * @member {String} created_at
 */
MediaFile.prototype['created_at'] = undefined;






export default MediaFile;

