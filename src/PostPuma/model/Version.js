/**
 * PostPuma - OpenAPI 3.0
 * PostPuma API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@postpuma.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionContent from './VersionContent';
import VersionOptions from './VersionOptions';

/**
 * The Version model module.
 * @module PostPuma/model/Version
 * @version 1.0.0
 */
class Version {
    /**
     * Constructs a new <code>Version</code>.
     * @alias module:PostPuma/model/Version
     * @param accountId {Number} 
     * @param isOriginal {Boolean} 
     * @param content {module:PostPuma/model/VersionContent} 
     */
    constructor(accountId, isOriginal, content) { 
        
        Version.initialize(this, accountId, isOriginal, content);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, isOriginal, content) { 
        obj['account_id'] = accountId;
        obj['is_original'] = isOriginal;
        obj['content'] = content;
    }

    /**
     * Constructs a <code>Version</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:PostPuma/model/Version} obj Optional instance to populate.
     * @return {module:PostPuma/model/Version} The populated <code>Version</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Version();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'Number');
            }
            if (data.hasOwnProperty('is_original')) {
                obj['is_original'] = ApiClient.convertToType(data['is_original'], 'Boolean');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = VersionContent.constructFromObject(data['content']);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = VersionOptions.constructFromObject(data['options']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Version</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Version</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Version.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          VersionContent.validateJSON(data['content']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          VersionOptions.validateJSON(data['options']);
        }

        return true;
    }


}

Version.RequiredProperties = ["account_id", "is_original", "content"];

/**
 * @member {Number} account_id
 */
Version.prototype['account_id'] = undefined;

/**
 * @member {Boolean} is_original
 */
Version.prototype['is_original'] = undefined;

/**
 * @member {module:PostPuma/model/VersionContent} content
 */
Version.prototype['content'] = undefined;

/**
 * @member {module:PostPuma/model/VersionOptions} options
 */
Version.prototype['options'] = undefined;






export default Version;

